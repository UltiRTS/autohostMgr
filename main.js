const Worker = require('web-worker')
const EventEmitter = require('events')
const LobbyReqListener=require('./libnetwork/liblobbyServerNetwork')
eventEmitter = new EventEmitter()
engines = {}
LobbyReqListener()

//WHATTHIS DOES: accepts connections from the lobby server and parses the actions, then reads parameters from paramater
eventEmitter.on('commandFromLobbyServer', function (rec) {
  global.lobbyServer = rec['client']
  var message = rec['message']
  var roomID=message['parameters']['roomID']

// whatthis does: create a discreate engine thread in the engine pool, set a event listener that fires with the engine id (and send it back to lobby)when the thread posts a message
  if (message['action'] == 'STARTGAME') {
    var script = writeScript(message['parameters']['obj']) //write script should return the path of the script generated by the room obj
    var engine = new Worker('./engine.js');
    engine.onmessage = function(e) {
      lobbyServer.send(JSON.stringify({'action':'fromHoster','parameters':{'msg':e.data,'roomID':roomID}}))
    }
    engines[roomID]=engine
    engines[roomID].postMessage(['INIT',roomID]);
    engines[roomID].postMessage(['SCRIPT',script]);
    engines[roomID].postMessage(['RUN']);
  }



  if (message['action'] == 'KILLENGINE') {
    engines[roomID].postMessage(['KILLURSELF']);
  }



  if (message['action'] == 'SAYROOM') {
    engines[roomID].postMessage(['SAYROOM',message['parameters'].txt]);
    

  }
})

